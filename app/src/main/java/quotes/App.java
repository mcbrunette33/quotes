/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.*;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collection;

public class App {
    Gson gson = new Gson();
    public static void main(String[] args)
    {
        //Gson gson = new Gson();
        //File jsonFile = new File("app/src/main/resources/recentquotes.json");
        //FileReader jsonFileReader = new FileReader(jsonFile);
        //Type collectionType = new TypeToken<Collection<Quotes>>(){}.getType();
        //ArrayList<Quotes> quotesArrayList = gson.fromJson(jsonFileReader, collectionType);
        //System.out.println(quotesArrayList.get(69).author);
        try{
            new App().run(args[0]);
        }
        catch (IOException e)
        {
            e.printStackTrace();
            System.exit(-1);
        }
        return;
    }
    public void run(String fileName) throws IOException {
        //dis the URL
        createRequest(fileName);


    }
    public HttpURLConnection createRequest(String fileName) throws IOException {
        //dis the URL
        URL quoteUrl = new URL(fileName);
        //we want type HttpURL connection so we must cast
        HttpURLConnection quoteUrlConnection = (HttpURLConnection) quoteUrl.openConnection();
        quoteUrlConnection.setRequestMethod(("GET"));

        return quoteUrlConnection;
    }
    public StringBuffer readResponse(HttpURLConnection _connection) throws IOException
    {
        try(BufferedReader responseReader = new BufferedReader((
                new InputStreamReader(_connection.getInputStream())
        ))) {
            String inputLine;
            StringBuffer content = new StringBuffer();
            while ((inputLine = responseReader.readLine()) != null) {
                content.append(inputLine);
            }
            return content;
        }
    }


    public Quotes parseQuote(StringBuffer _content)
    {
        Quotes newQuote = gson.fromJson(String.valueOf(_content), Quotes.class);
        return newQuote;
    }


}

